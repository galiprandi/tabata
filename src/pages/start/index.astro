---
import Layout from '../../layouts/layout.astro'
import WorkoutIcon from '../../components/WorkoutIcon.astro'
import TimeIcon from '../../components/TimeIcon.astro'
---

<Layout>
  <section>
    <div id="subtitle">Press start to begin</div>
  </section>
  <section>
    <div id="title">Tabata timer</div>
  </section>
  <section>
    <progress id="progress" value="100" max="100"></progress>
  </section>
  <section id="info">
    <div>
      <TimeIcon />
      <span id="time-left"></span>
    </div>
    <div>
      <WorkoutIcon />
      <span id="exercise-left"></span>
    </div>
  </section>
  <footer class="columns">
    <a href="/tabata" class="secondary">Back</a>
    <audio id="beep" src="/tabata/beep.mp3"></audio>
  </footer>
</Layout>

<script>
  import { getSettings, switchBodyClass, delaySeconds } from '../../assets/main'

  // Initialize app
  document.addEventListener('DOMContentLoaded', startWorkout)

  // Play beep sound function
  function playBeep() {
    const audio = new Audio('/tabata/beep.mp3')
    audio.play()
  }

  // Start workout/rest circuit
  const settings = getSettings()
  let { workDuration, restDuration, workouts, prepDuration } = settings

  async function startWorkout() {
    let currentExercise = 0
    let remainingWorkouts = workouts.length
    const totalRoutineTime =
      remainingWorkouts * (workDuration / 60 + restDuration / 60)

    // Update screen
    updateExerciseLeft(workouts.length)
    updateRutineTimeLeft(totalRoutineTime)

    // Show preparation time
    displayContent(workouts[0], 'Preparation Time')
    await delaySeconds(prepDuration)
    playBeep()

    // Loop through workouts
    for (const workout of workouts) {
      switchBodyClass('workout')
      displayContent(workout, 'Work Time')

      // Work time
      for (let timeLeft = workDuration; timeLeft > 0; timeLeft--) {
        renderTime(timeLeft, workDuration)
        await delaySeconds(1)
      }

      // Update current exercise
      currentExercise = currentExercise + 1
      remainingWorkouts--

      updateRutineTimeLeft(calculateTimeLeft(remainingWorkouts))
      updateExerciseLeft(remainingWorkouts)

      // Show rest time
      if (currentExercise < workouts.length) {
        const nextWorkout = workouts[currentExercise]
        switchBodyClass('rest')
        displayContent(nextWorkout, 'Rest Time')

        for (let j = restDuration; j > 0; j--) {
          renderTime(j, restDuration)
          await delaySeconds(1)
        }
      } else location.href = '/tabata/end'
    }
  }

  // Show exercise function
  function displayContent(title: string, content?: string) {
    const subEl = subtitleElement()
    const titleEl = titleElement()
    if (titleEl) titleEl.textContent = title
    if (subEl) subEl.textContent = content ?? ''
  }

  // Show time function & beep sound when time is up
  function renderTime(time: number, totlaTime: number) {
    const progressEl = progressElement()
    if (progressEl) progressEl.value = (time / totlaTime) * 100
    // Play beep sound when time is up
    if (time <= 3) playBeep()
  }

  // Update exercise left
  const updateExerciseLeft = (exercise: number) => {
    const exerciseLeftEl = exerciseLeftElement()
    if (exerciseLeftEl) exerciseLeftEl.textContent = exercise.toString()
  }

  // Update rutine time left
  function updateRutineTimeLeft(time: number) {
    const timeLeftEl = timeLeftElement()
    if (timeLeftEl) timeLeftEl.textContent = `${time.toFixed(1).toString()}m`
  }

  // Calculate time left
  const calculateTimeLeft = (remainingWorkouts: number) =>
    remainingWorkouts * (workDuration / 60 + restDuration / 60)

  // Get progress element
  function progressElement() {
    return document.getElementById('progress') as HTMLProgressElement | null
  }

  // Get Title element
  function titleElement() {
    return document.getElementById('title') as HTMLTitleElement | null
  }

  // Get Subtitle element
  function subtitleElement() {
    return document.getElementById('subtitle') as HTMLTitleElement | null
  }

  // Get exercise left element
  function exerciseLeftElement() {
    return document.getElementById('exercise-left') as HTMLSpanElement | null
  }

  // Get time left element
  function timeLeftElement() {
    return document.getElementById('time-left') as HTMLSpanElement | null
  }
</script>

<style>
  #title {
    font-size: 8vw;
    font-weight: bold;
    line-height: 1;
  }

  #subtitle {
    font-size: 3vw;
  }

  #info {
    font-size: 5vw;
    display: flex;
    justify-content: center;
    gap: 3em;
  }

  #progress {
    width: 50ch;
    color: var(--color-accent);
    margin: 0;
    height: 0.7em;
  }
</style>
